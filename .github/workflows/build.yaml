on: [push, pull_request]
name: build
jobs:
  prepare-release:
    name: Prepare a release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Make a release
        run: |
          gh release create "${{ github.ref_name }}" --draft
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}

  cluttex:
    name: Build
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install lua5.3 liblua5.3-dev
          docker pull ghcr.io/minoki/lunarml:0.2.1
          sudo ln -s /usr/bin/lua /usr/local/bin/texlua
      - name: Install LuaFileSystem
        run: |
          curl -LO "https://github.com/lunarmodules/luafilesystem/archive/refs/tags/v1_8_0.tar.gz"
          tar xf v1_8_0.tar.gz
          cd luafilesystem-1_8_0
          make LUA_VERSION=5.3
          sudo make LUA_VERSION=5.3 install
      - name: Build
        run: |
          make lunarml="docker run --rm --platform linux/amd64 -v \"$(pwd)\":/work -w /work ghcr.io/minoki/lunarml:0.2.1 lunarml"
      - name: Show version
        run: make check-version
      - name: Archive
        run: make archive
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: archive
          path: |
            cluttex-*.tar.gz
            cluttex-*.zip
      - name: Attach tarballs to the release
        run: |
          gh release upload "${{ github.ref_name }}" cluttex-*.tar.gz cluttex-*.zip
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
